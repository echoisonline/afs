This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
.gitignore
eslint.config.js
index.html
package.json
public/clients.svg
public/contractors.svg
public/cross.svg
public/delete.svg
public/edit.svg
public/logout.svg
public/ok.svg
public/organizations.svg
public/OTClogo.svg
public/photo.svg
public/search.svg
public/settings.svg
public/vite.svg
README.md
src/assets/react.svg
src/components/App.jsx
src/components/AuthComponent.jsx
src/components/buttons/Button.jsx
src/components/buttons/IconButton.jsx
src/components/CompanyDetails.jsx
src/components/Contacts.jsx
src/components/Input.jsx
src/components/MultiSelector.jsx
src/components/Navbar.jsx
src/components/Photos.jsx
src/components/Selector.jsx
src/components/SideMenu.jsx
src/main.jsx
src/pages/Home.jsx
src/styles/index.css
tailwind.config.js
vite.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="eslint.config.js">
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'

export default [
  { ignores: ['dist'] },
  {
    files: ['**/*.{js,jsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...js.configs.recommended.rules,
      ...reactHooks.configs.recommended.rules,
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
]
</file>

<file path="index.html">
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>
</file>

<file path="package.json">
{
  "name": "afs",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tailwindcss/vite": "^4.1.3",
    "normalize.css": "^8.0.1",
    "react": "^19.0.0",
    "react-dom": "^19.0.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@vitejs/plugin-react": "^4.3.4",
    "autoprefixer": "^10.4.21",
    "eslint": "^9.21.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "postcss": "^8.5.3",
    "tailwindcss": "^4.1.3",
    "vite": "^6.2.0"
  }
}
</file>

<file path="public/clients.svg">
<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M10.88 1.9522C11.9468 2.50663 12.68 3.6579 12.68 4.98824C12.68 6.31858 11.9468 7.46985 10.88 8.02428M12.32 11.9653C13.4082 12.4803 14.3882 13.3195 15.2 14.4M0.799988 14.4C2.20146 12.5347 4.1042 11.3882 6.19999 11.3882C8.29578 11.3882 10.1985 12.5347 11.6 14.4M9.43999 4.98824C9.43999 6.85951 7.98939 8.37648 6.19999 8.37648C4.41058 8.37648 2.95999 6.85951 2.95999 4.98824C2.95999 3.11697 4.41058 1.60001 6.19999 1.60001C7.98939 1.60001 9.43999 3.11697 9.43999 4.98824Z" stroke="#3B3B3B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</file>

<file path="public/contractors.svg">
<svg width="16" height="12" viewBox="0 0 16 12" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.33326 1.70663C10.5838 2.00724 11.697 2.71962 12.4938 3.72925C13.2906 4.73888 13.7248 5.98711 13.7266 7.2733V8.54663M2.27326 8.54663V7.2733C2.27148 5.9862 2.70435 4.7362 3.50174 3.72585C4.29913 2.71551 5.41431 2.004 6.66659 1.70663" stroke="#3B3B3B" stroke-width="1.5" stroke-miterlimit="10"/>
<path d="M13.7267 8.54668H2.27333C1.57009 8.54668 1 9.11677 1 9.82001C1 10.5233 1.57009 11.0933 2.27333 11.0933H13.7267C14.4299 11.0933 15 10.5233 15 9.82001C15 9.11677 14.4299 8.54668 13.7267 8.54668Z" stroke="#3B3B3B" stroke-width="1.5" stroke-miterlimit="10"/>
<path d="M9.90672 8.54665H6.09338L6.66588 1.64056C6.70026 1.22577 7.04694 0.906647 7.46314 0.906647H8.53696C8.95316 0.906647 9.29984 1.22577 9.33422 1.64056L9.90672 8.54665Z" stroke="#3B3B3B" stroke-width="1.5" stroke-miterlimit="10"/>
</svg>
</file>

<file path="public/cross.svg">
<svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.5 0.5L0.5 9.5" stroke="#3B3B3B" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M9.5 9.5L0.5 0.5" stroke="#3B3B3B" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</file>

<file path="public/delete.svg">
<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M16.8748 4.375L3.12476 4.37501" stroke="#D72323" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M8.125 8.125V13.125" stroke="#D72323" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M11.875 8.125V13.125" stroke="#D72323" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M15.625 4.375V16.25C15.625 16.4158 15.5592 16.5747 15.4419 16.6919C15.3247 16.8092 15.1658 16.875 15 16.875H5C4.83424 16.875 4.67527 16.8092 4.55806 16.6919C4.44085 16.5747 4.375 16.4158 4.375 16.25V4.375" stroke="#D72323" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M13.125 4.375V3.125C13.125 2.79348 12.9933 2.47554 12.7589 2.24112C12.5245 2.0067 12.2065 1.875 11.875 1.875H8.125C7.79348 1.875 7.47554 2.0067 7.24112 2.24112C7.0067 2.47554 6.875 2.79348 6.875 3.125V4.375" stroke="#D72323" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</file>

<file path="public/edit.svg">
<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5.24112 14.875H1.75C1.58424 14.875 1.42527 14.8092 1.30806 14.6919C1.19085 14.5747 1.125 14.4158 1.125 14.25V10.7589C1.125 10.6768 1.14117 10.5955 1.17258 10.5197C1.20398 10.4439 1.25002 10.375 1.30806 10.3169L10.6831 0.941946C10.8003 0.824736 10.9592 0.758888 11.125 0.758888C11.2908 0.758888 11.4497 0.824736 11.5669 0.941946L15.0581 4.43306C15.1753 4.55027 15.2411 4.70924 15.2411 4.875C15.2411 5.04076 15.1753 5.19974 15.0581 5.31695L5.68306 14.6919C5.62502 14.75 5.55612 14.796 5.48029 14.8274C5.40447 14.8588 5.32319 14.875 5.24112 14.875Z" stroke="#3B3B3B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M8.625 3L13 7.375" stroke="#3B3B3B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M5.46011 14.8351L1.16479 10.5397" stroke="#3B3B3B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</file>

<file path="public/logout.svg">
<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M11.5946 4.71875L14.875 8L11.5946 11.2812" stroke="white" stroke-opacity="0.95" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M6.125 8H14.8727" stroke="white" stroke-opacity="0.95" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M6.125 14.875H1.75C1.58424 14.875 1.42527 14.8092 1.30806 14.6919C1.19085 14.5747 1.125 14.4158 1.125 14.25V1.75C1.125 1.58424 1.19085 1.42527 1.30806 1.30806C1.42527 1.19085 1.58424 1.125 1.75 1.125H6.125" stroke="white" stroke-opacity="0.95" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</file>

<file path="public/ok.svg">
<svg width="12" height="8" viewBox="0 0 12 8" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M11.5 0.500305L4.5 7.49999L1 4.00031" stroke="#3B3B3B" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</file>

<file path="public/organizations.svg">
<svg width="18" height="16" viewBox="0 0 18 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.8756 3.625H2.12561C1.78043 3.625 1.50061 3.90482 1.50061 4.25V14.25C1.50061 14.5952 1.78043 14.875 2.12561 14.875H15.8756C16.2208 14.875 16.5006 14.5952 16.5006 14.25V4.25C16.5006 3.90482 16.2208 3.625 15.8756 3.625Z" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M12.125 3.625V2.375C12.125 2.04348 11.9933 1.72554 11.7589 1.49112C11.5245 1.2567 11.2065 1.125 10.875 1.125H7.125C6.79348 1.125 6.47554 1.2567 6.24112 1.49112C6.0067 1.72554 5.875 2.04348 5.875 2.375V3.625" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M16.5006 7.8679C14.2211 9.1867 11.6334 9.87914 8.99998 9.875C6.36696 9.87914 3.77968 9.18693 1.50049 7.86857" stroke="white" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M8.0625 7.375H9.9375" stroke="white" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</file>

<file path="public/OTClogo.svg">
<svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M17.9999 0C22.9707 0 27.471 2.01471 30.7283 5.2722C34.0806 8.62396 36 13.2722 36 17.9998C36 22.9707 33.9858 27.4703 30.7283 30.7276C27.471 33.9849 22.9707 36 17.9999 36C13.0297 36 8.52939 33.9849 5.272 30.7276C2.0146 27.4703 0 22.9707 0 17.9998C0 8.08225 8.08414 0 17.9999 0ZM15.5361 34.5984C15.9296 33.623 16.1368 32.4978 16.2061 31.3629C16.297 29.8694 16.149 28.3685 15.8711 27.1652C15.6007 25.9935 14.7402 25.09 13.5787 24.2794C10.2549 26.544 5.70273 26.3106 2.54235 24.5361C3.39129 26.542 4.61916 28.3472 6.13615 29.8641C8.62345 32.3518 11.8889 34.0618 15.5362 34.5984H15.5361ZM1.84059 22.5305C4.87601 24.7293 9.08983 25.4357 12.4096 23.5403C11.8084 23.1906 11.164 22.8482 10.5028 22.4969C7.70736 21.0122 3.42859 18.7029 1.55119 14.6739C1.33513 15.7491 1.22167 16.8612 1.22167 17.9998C1.22167 19.5701 1.43697 21.0894 1.84052 22.5305H1.84059ZM2.11472 12.5851C2.50712 15.3411 5.83766 18.1579 7.55123 19.3365C7.96896 18.7298 8.34217 17.6645 8.52196 16.3422C8.69838 15.0501 8.67981 13.5388 8.32958 11.995C7.12972 10.6058 6.06287 9.00239 5.36902 6.95568C3.94333 8.58474 2.82776 10.4917 2.11465 12.5851L2.11472 12.5851ZM6.35337 5.92235C7.39717 9.5783 9.76118 11.8207 11.9783 13.923C12.5258 14.4423 13.0645 14.9536 13.5763 15.4766C13.943 11.6966 12.5918 6.02728 9.68769 3.42214C8.4727 4.1164 7.35355 4.95783 6.35337 5.92235ZM10.8144 2.83447C14.0841 6.18175 15.457 12.1859 14.6717 16.6796C15.3686 17.5155 15.9701 18.4121 16.4107 19.4386C17.1163 21.0859 17.6808 23.1168 17.9831 25.6508C17.9889 25.5476 17.9945 25.4454 18.0006 25.3442C18.1647 22.6659 18.5174 20.545 19.0502 18.8415C19.4592 15.0413 18.5882 13.418 17.7625 11.8812C16.9027 10.2799 15.1091 6.24512 16.3292 1.30401C14.3722 1.49722 12.515 2.02648 10.8144 2.8344V2.83447ZM17.4645 1.22998C16.3375 5.62717 18.0894 9.8529 18.8616 11.2903C19.4634 12.4106 20.088 13.5731 20.3155 15.43C22.0295 12.075 22.818 5.31878 21.1186 1.51078C20.108 1.32087 19.066 1.22131 17.9999 1.22131C17.821 1.22131 17.6425 1.22454 17.4644 1.22998H17.4645ZM22.39 1.80141C23.5222 4.92129 23.3178 9.21149 22.9426 11.1263C23.909 10.6369 25.1612 9.72733 26.3029 8.67653C27.4992 7.57425 28.5467 6.33959 28.9733 5.30633C27.0962 3.68292 24.8554 2.46808 22.39 1.80141ZM29.927 6.19909C29.3468 7.31802 28.3063 8.52811 27.1477 9.5944C25.5927 11.0262 23.7865 12.2306 22.5872 12.6178C22.1817 14.0777 21.64 15.4699 21.1417 16.7481C20.8107 17.5992 20.4998 18.3973 20.2611 19.1496H20.2588C19.747 20.7616 19.4063 22.8035 19.2467 25.4174C19.2177 25.886 19.1948 26.3722 19.1777 26.8771C19.2758 26.46 19.3914 26.0764 19.5258 25.737L19.44 25.7024C20.6249 22.7966 21.7439 20.176 23.7448 18.006C23.9564 17.7766 24.1776 17.5529 24.4091 17.335C26.3599 15.3189 28.1923 13.2722 29.5177 11.2022C30.271 10.0248 30.8596 8.84104 31.2092 7.65262C30.8097 7.14352 30.3818 6.65844 29.927 6.19909ZM32.1015 8.90317C31.7179 9.90533 31.1954 10.8959 30.5681 11.8761C29.9705 12.8092 29.2779 13.7341 28.5218 14.6504C29.7754 14.0941 32.133 13.1694 33.9372 12.7392C33.487 11.375 32.8668 10.0879 32.1015 8.90317ZM34.2836 13.9379C30.0516 14.8719 26.4695 16.8923 24.6633 18.8508C23.4766 20.1378 22.6104 21.6318 21.842 23.2735C23.1143 22.4858 24.4539 22.1009 25.8243 21.707C28.0645 21.0635 32.7992 18.9887 34.6071 15.5897C34.5266 15.0297 34.4178 14.4788 34.2836 13.9379ZM34.7755 17.665C32.8377 20.1542 29.3532 21.9062 27.674 22.4554C28.3391 22.6189 28.9734 22.8326 29.5783 23.0826C30.9281 23.641 32.1259 24.3749 33.1975 25.1195C34.2121 22.9588 34.7787 20.5457 34.7787 17.9998C34.7787 17.8882 34.7776 17.7761 34.7755 17.6651V17.665ZM32.6207 26.2378C31.5743 25.5025 30.4067 24.7739 29.1044 24.2359C27.7851 23.6904 26.318 23.3349 24.6823 23.3582C23.4181 23.7811 22.211 24.3426 21.1289 25.4252L21.1281 25.4235C20.6076 25.9498 20.2697 27.2762 20.1145 28.9317C19.9515 30.672 20.0094 32.7321 20.2834 34.6239C24.0038 34.1179 27.3361 32.393 29.865 29.8641C30.9389 28.79 31.8684 27.5704 32.6206 26.2378H32.6207ZM9.75829 16.5082C9.55717 17.983 9.1148 19.2244 8.59799 20.0094C9.42003 20.506 10.2668 20.9561 11.0894 21.3931C13.5566 22.7033 15.8159 23.904 16.759 25.9306C16.4765 23.4625 15.9378 21.5025 15.2628 19.9276C14.417 17.9555 12.8106 16.4319 11.1185 14.8268C10.6914 14.4222 10.2598 14.0121 9.83157 13.5886C9.91703 14.624 9.88049 15.614 9.75822 16.5082H9.75829Z" fill="white"/>
</svg>
</file>

<file path="public/photo.svg">
<svg width="16" height="15" viewBox="0 0 16 15" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14.667 7.66665V9.73331C14.667 11.2268 14.667 11.9735 14.3763 12.544C14.1206 13.0457 13.7127 13.4537 13.2109 13.7093C12.6405 14 11.8938 14 10.4003 14H5.60029C4.10681 14 3.36008 14 2.78964 13.7093C2.28788 13.4537 1.87993 13.0457 1.62427 12.544C1.33362 11.9735 1.33362 11.2268 1.33362 9.73331V6.26665C1.33362 4.77317 1.33362 4.02644 1.62427 3.45601C1.87993 2.95424 2.28788 2.54629 2.78964 2.29063C3.36008 1.99998 4.10681 1.99998 5.60029 1.99998H8.33362M12.667 5.33331V1.33331M10.667 3.33331H14.667M10.667 7.99998C10.667 9.47274 9.47305 10.6666 8.00029 10.6666C6.52753 10.6666 5.33362 9.47274 5.33362 7.99998C5.33362 6.52722 6.52753 5.33331 8.00029 5.33331C9.47305 5.33331 10.667 6.52722 10.667 7.99998Z" stroke="#3B3B3B" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</file>

<file path="public/search.svg">
<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8.0625 14.625C11.6869 14.625 14.625 11.6869 14.625 8.0625C14.625 4.43813 11.6869 1.5 8.0625 1.5C4.43813 1.5 1.5 4.43813 1.5 8.0625C1.5 11.6869 4.43813 14.625 8.0625 14.625Z" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M12.7026 12.7032L16.4996 16.5001" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</file>

<file path="public/settings.svg">
<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3.08602 6.15622C3.22664 5.85934 3.3907 5.57809 3.5782 5.30465L3.54695 3.2734C3.54695 3.0859 3.62508 2.90622 3.77352 2.78122C4.50008 2.17184 5.3282 1.67965 6.24227 1.35153C6.42195 1.28903 6.61727 1.30465 6.77352 1.40622L8.5157 2.45309C8.84383 2.42965 9.17195 2.42965 9.50008 2.45309L11.2423 1.40622C11.4063 1.31247 11.6016 1.28903 11.7813 1.35153C12.672 1.67184 13.5079 2.1484 14.2501 2.7734C14.3907 2.89059 14.4766 3.07809 14.4688 3.26559L14.4376 5.29684C14.6251 5.57028 14.7891 5.85153 14.9298 6.1484L16.7032 7.13278C16.8673 7.22653 16.9845 7.38278 17.0157 7.57028C17.1798 8.49997 17.1876 9.46872 17.0157 10.414C16.9845 10.6015 16.8673 10.7578 16.7032 10.8515L14.9298 11.8359C14.7891 12.1328 14.6251 12.414 14.4376 12.6875L14.4688 14.7187C14.4688 14.9062 14.3907 15.0859 14.2423 15.2109C13.5157 15.8203 12.6876 16.3125 11.7735 16.6406C11.5938 16.7031 11.3985 16.6875 11.2423 16.5859L9.50008 15.539C9.17195 15.5625 8.84383 15.5625 8.5157 15.539L6.77352 16.5859C6.60945 16.6797 6.41414 16.7031 6.23445 16.6406C5.34383 16.3203 4.50789 15.8437 3.7657 15.2187C3.62508 15.1015 3.53914 14.914 3.54695 14.7265L3.5782 12.6953C3.3907 12.4218 3.22664 12.1406 3.08602 11.8437L1.31258 10.8593C1.14852 10.7656 1.03133 10.6093 1.00008 10.4218C0.836016 9.49215 0.828203 8.5234 1.00008 7.57809C1.03133 7.39059 1.14852 7.23434 1.31258 7.14059L3.08602 6.15622Z" stroke="white" stroke-opacity="0.95" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M9 12.75C11.0711 12.75 12.75 11.0711 12.75 9C12.75 6.92893 11.0711 5.25 9 5.25C6.92893 5.25 5.25 6.92893 5.25 9C5.25 11.0711 6.92893 12.75 9 12.75Z" stroke="white" stroke-opacity="0.95" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</file>

<file path="public/vite.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
</file>

<file path="README.md">
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend using TypeScript and enable type-aware lint rules. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.
</file>

<file path="src/assets/react.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
</file>

<file path="src/components/App.jsx">
import "../styles/App.css";
import Home from "../pages/Home.jsx";

function App() {
  return (
    <>
      <Home></Home>
    </>
  );
}

export default App;
</file>

<file path="src/components/AuthComponent.jsx">
import React, { useState } from "react";

const AuthComponent = () => {
  const [username, setUsername] = useState("");
  const [token, setToken] = useState("");
  const [error, setError] = useState("");

  const handleAuth = async () => {
    try {
      const response = await fetch(
        `https://test-task-api.allfuneral.com/auth?user=${username}`,
        {
          method: "GET",
        }
      );

      if (response.ok) {
        // Извлекаем токен из заголовков
        const authToken = response.headers.get("Authorization");

        if (authToken) {
          setToken(authToken.replace("Bearer ", "")); // Сохраняем токен без префикса "Bearer"
          setError("");
        } else {
          setError("Токен не получен");
        }
      } else {
        setError("Ошибка при авторизации");
      }
    } catch (err) {
      setError("Ошибка при авторизации");
    }
  };

  return (
    <div>
      <input
        type="text"
        placeholder="Введите имя пользователя"
        value={username}
        onChange={(e) => setUsername(e.target.value)}
      />
      <button onClick={handleAuth}>Авторизоваться</button>

      {token && <p>Токен: {token}</p>}
      {error && <p style={{ color: "red" }}>{error}</p>}
    </div>
  );
};

export default AuthComponent;
</file>

<file path="src/components/buttons/Button.jsx">
import React, { useState } from "react";

const Button = ({
  icon,
  text,
  onClick,
  className = "",
  variant = "filled", // 'filled' | 'outlined' | 'flattened' | 'icononly'
  width = "148px",
  height = "40px",
}) => {
  const [blink, setBlink] = useState(false);

  const handleClick = (e) => {
    setBlink(true);
    setTimeout(() => {
      setBlink(false);
    }, 200);

    if (onClick) onClick(e);
  };

  const baseClasses = `flex items-center justify-start font-semibold font rounded-[8px] transition`;
  const sizeStyle = {
    width,
    height,
  };

  const paddingClasses = (() => {
    if (!icon || variant === "icononly") return "";

    switch (variant) {
      case "filled":
      case "outlined":
        return "py-[10px] pr-[40px] pl-[12px] gap-[20px]";
      case "flattened":
        return "px-[8px] py-[4px] gap-[8px]";
      default:
        return "";
    }
  })();

  const iconClasses = (() => {
    if (!icon || variant === "icononly") return "";

    switch (variant) {
      case "filled":
      case "outlined":
        return "w-[16px] h-[16px]";
      case "flattened":
        return "w-[12px] h-[12px]";
      default:
        return "";
    }
  })();

  const variantClasses = {
    filled: blink
      ? "bg-[#757575] text-white !text-[13px]"
      : "bg-[#3B3B3B] hover:bg-[#626262] text-white !text-[13px]",

    outlined: blink
      ? "border border-[#6243e6] text-[#6243e6] bg-transparent !text-[13px]"
      : "border border-[#cccccc] text-[#3b3b3b] hover:border-[#999999] hover:text-[#6D4AFF] bg-transparent !text-[13px]",

    flattened: blink
      ? "border border-[#6243e6] text-[#6243e6] bg-transparent !text-[11px]"
      : "border border-[#cccccc] text-[#3b3b3b] hover:border-[#999999] hover:text-[#6D4AFF] bg-transparent !text-[11px]",

    icononly: blink
      ? "bg-[#757575] w-[28px] h-[28px] !p-[6px] rounded-[8px]"
      : "bg-[#3B3B3B] hover:bg-[#626262] !w-[28px] !h-[28px] !p-[6px] rounded-[8px] !justify-center",
  };

  return (
    <button
      onClick={handleClick}
      className={`${baseClasses} ${variantClasses[variant]} ${paddingClasses} ${className}`}
      style={sizeStyle}
    >
      {icon && <img src={icon} alt="" className={`${iconClasses}`} />}
      {text && (
        <span className="flex-1 text-center leading-[20px] flex items-center justify-center">
          {text}
        </span>
      )}
    </button>
  );
};

export default Button;
</file>

<file path="src/components/buttons/IconButton.jsx">
import React, { useState } from "react";

const IconButton = ({ icon, onClick, className = "" }) => {
  const [blink, setBlink] = useState(false);

  const handleClick = (e) => {
    setBlink(true);
    setTimeout(() => {
      setBlink(false);
    }, 200);

    if (onClick) onClick(e);
  };

  const baseClasses =
    "flex items-center justify-center w-[32px] h-[32px] rounded-full transition p-[6px]";

  const blinkClass = blink ? "bg-[#ebe6ff]" : "bg-none hover:bg-[#f5f5f5]";

  return (
    <button
      onClick={handleClick}
      className={`${baseClasses} ${blinkClass} ${className}`}
    >
      {icon && <img src={icon} alt="" />}
    </button>
  );
};

export default IconButton;
</file>

<file path="src/components/CompanyDetails.jsx">
import React, { useState } from "react";
import Button from "./buttons/Button";
import Input from "./Input";
import Selector from "./Selector";
import MultiSelector from "./MultiSelector";

function CompanyDetails() {
  const entities = [
    "Sole Proprietorship",
    "Partnership",
    "Limited Liability Company",
  ];
  const types = [
    "Funeral Home",
    "Logistics services",
    "Burial care Contractor",
  ];

  const [selectedOptions, setSelectedOptions] = useState([]);
  const handleSelectionChange = (newSelectedOptions) => {
    console.log("Selected Options:", newSelectedOptions);
    setSelectedOptions(newSelectedOptions);
  };

  const [isEditing, setIsEditing] = useState(false);
  const [agreementNumber, setAgreementNumber] = useState("Empty");
  const [date, setDate] = useState("2025-04-05");
  const [businessEntity, setBusinessEntity] = useState("Empty");
  const [companyType, setCompanyType] = useState("Empty");

  const handleCancel = () => {
    setIsEditing(false);
    // Optionally reset changes here if needed
    console.log("Cancelled changes");
  };

  const handleSave = () => {
    console.log("Saving changes...");
    console.log("Agreement Number:", agreementNumber);
    console.log("Date:", date);
    console.log("Business Entity:", businessEntity);
    console.log("Selected Options:", selectedOptions);

    setIsEditing(false); // Close editing mode
    // You can do other saving actions here, e.g., save to a backend
  };

  return (
    <div className="flex flex-col justify-between w-[640px] h-[236px] mb-[32px] p-[24px] rounded-[16px] bg-white">
      <div className="flex flex-row justify-between w-full h-[28px] mb-[16px]">
        <span className="flex items-center text-[14px] text-[#333333] font-bold">
          Company Details
        </span>
        {!isEditing ? (
          <Button
            height="28px"
            width="72px"
            icon="edit.svg"
            text="Edit"
            variant="outlined"
            className="h-[50px] !p-[4px_12px_4px_8px] !gap-[12px]"
            onClick={() => setIsEditing(true)}
          />
        ) : (
          <div className="flex gap-[12px]">
            <Button
              height="28px"
              width="133px"
              icon="ok.svg"
              text="Save changes"
              variant="flattened"
              onClick={handleSave}
            />
            <Button
              height="28px"
              width="91px"
              icon="cross.svg"
              text="Cancel"
              variant="flattened"
              onClick={handleCancel}
            />
          </div>
        )}
      </div>

      <div className="grid grid-cols-[154px_1fr] grid-rows-[40px_40px_40px] gap-y-[10px] gap-x-[20px]">
        <span className="flex items-center text-[13px] text-[#808080]">
          Agreement number:
        </span>
        <div className="flex flex-row">
          {isEditing ? (
            <>
              <Input
                width="180.5px"
                value={agreementNumber}
                onChange={(e) => {
                  console.log("Agreement Number changed:", e.target.value);
                  setAgreementNumber(e.target.value);
                }}
              />
              <span className="flex items-center mx-[12px] text-[13px] text-[#808080]">
                Date:
              </span>
              <Input
                width="180.5px"
                value={date}
                onChange={(e) => {
                  console.log("Date changed:", e.target.value);
                  setDate(e.target.value);
                }}
              />
            </>
          ) : (
            <span className="text-[13px] flex items-center">
              {agreementNumber}
              <span className="mx-[12px]">Date: {date}</span>
            </span>
          )}
        </div>

        <span className="flex items-center text-[13px] text-[#808080]">
          Business entity:
        </span>
        {isEditing ? (
          <Selector
            width="100%"
            value={businessEntity}
            options={entities}
            onChange={(e) => {
              console.log("Business Entity changed:", e.target.value);
              setBusinessEntity(e.target.value);
            }}
          />
        ) : (
          <span className="text-[13px] flex items-center">
            {businessEntity}
          </span>
        )}

        <span className="flex items-center text-[13px] text-[#808080]">
          Company type:
        </span>
        {isEditing ? (
          <MultiSelector
            width="100%"
            height="50px"
            options={types}
            value={selectedOptions}
            onChange={handleSelectionChange}
            isEditing={isEditing}
          />
        ) : (
          <span className="text-[13px] flex items-center">
            {selectedOptions.length > 0
              ? selectedOptions.join(", ")
              : companyType}
          </span>
        )}
      </div>
    </div>
  );
}

export default CompanyDetails;
</file>

<file path="src/components/Contacts.jsx">
import React, { useState } from "react";
import Button from "./buttons/Button";
import Input from "./Input";

function Contacts() {
  const [isEditing, setIsEditing] = useState(false);
  const [responsiblePerson, setResponsiblePerson] = useState("Name Surname");
  const [date, setDate] = useState("2025-04-05");
  const [phoneNumber, setPhoneNumber] = useState("+1 702 555 2345");
  const [email, setEmail] = useState("david_rosenberg88@gmail.com");

  const handleCancel = () => {
    setIsEditing(false);
  };

  return (
    <div className="flex flex-col justify-between w-[640px] h-[236px] mb-[32px] p-[24px] rounded-[16px] bg-white">
      <div className="flex flex-row justify-between w-full h-[28px] mb-[16px]">
        <span className="flex items-center text-[14px] text-[#333333] font-bold">
          Company Details
        </span>
        {!isEditing ? (
          <Button
            height="28px"
            width="72px"
            icon="edit.svg"
            text="Edit"
            variant="outlined"
            className="h-[50px] !p-[4px_12px_4px_8px] !gap-[12px]"
            onClick={() => setIsEditing(true)}
          />
        ) : (
          <div className="flex gap-[12px]">
            <Button
              height="28px"
              width="133px"
              icon="ok.svg"
              text="Save changes"
              variant="flattened"
              onClick={() => setIsEditing(false)}
            />
            <Button
              height="28px"
              width="91px"
              icon="cross.svg"
              text="Cancel"
              variant="flattened"
              onClick={handleCancel}
            />
          </div>
        )}
      </div>

      <div className="grid grid-cols-[154px_1fr] grid-rows-[40px_40px_40px] gap-y-[10px] gap-x-[20px]">
        <span className="flex items-center text-[13px] text-[#808080]">
          Responsible person:
        </span>
        {isEditing ? (
          <>
            <Input
              width="100%"
              value={responsiblePerson}
              onChange={(e) => setResponsiblePerson(e.target.value)}
            />
          </>
        ) : (
          <span className="text-[13px] flex items-center">
            {responsiblePerson}
          </span>
        )}

        <span className="flex items-center text-[13px] text-[#808080]">
          Phone number:
        </span>
        {isEditing ? (
          <Input
            width="100%"
            value={phoneNumber}
            onChange={(e) => setPhoneNumber(e.target.value)}
          />
        ) : (
          <span className="text-[13px] flex items-center">{phoneNumber}</span>
        )}

        <span className="flex items-center text-[13px] text-[#808080]">
          E-mail:
        </span>
        {isEditing ? (
          <Input
            width="100%"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
        ) : (
          <span className="text-[13px] flex items-center">{email}</span>
        )}
      </div>
    </div>
  );
}

export default Contacts;
</file>

<file path="src/components/Input.jsx">
import React from "react";

function Input({ width = "312px", height = "40px", value, onChange }) {
  return (
    <div>
      <input
        type="text"
        value={value}
        onChange={onChange}
        className={
          "!px-[12px] !py-[10px] border border-[#cccccc] hover:border-[#808080] transition-all focus:outline-[2px] focus:outline-[#35cdfd] focus:border-none rounded-[8px] text-[#333333] text-[14px] font-normal"
        }
        style={{ width, height }}
      />
    </div>
  );
}

export default Input;
</file>

<file path="src/components/MultiSelector.jsx">
import React, { useState, useEffect, useRef } from "react";

function MultiSelector({
  width = "312px",
  height = "40px",
  options = [],
  value = [],
  onChange,
}) {
  const [isFocused, setIsFocused] = useState(false);
  const [selectedOptions, setSelectedOptions] = useState(value);
  const dropdownRef = useRef(null);
  const selectorRef = useRef(null);

  const handleCheckboxChange = (option) => {
    const newSelectedOptions = selectedOptions.includes(option)
      ? selectedOptions.filter((item) => item !== option)
      : [...selectedOptions, option];

    setSelectedOptions(newSelectedOptions);
    onChange(newSelectedOptions);
  };

  // Close the dropdown if the user clicks outside
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (
        dropdownRef.current &&
        !dropdownRef.current.contains(event.target) &&
        !selectorRef.current.contains(event.target)
      ) {
        setIsFocused(false);
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  const renderCheckbox = (isChecked) => {
    if (isChecked) {
      return (
        <svg
          width="20"
          height="20"
          viewBox="0 0 20 20"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect width="20" height="20" rx="4" fill="white" />
          <rect
            x="0.5"
            y="0.5"
            width="19"
            height="19"
            rx="3.5"
            stroke="black"
            strokeOpacity="0.3"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M15.9242 6.07608C16.1585 6.31039 16.1585 6.69029 15.9242 6.9246L8.92416 13.9243C8.68985 14.1586 8.30997 14.1586 8.07566 13.9243L4.57566 10.4246C4.34133 10.1903 4.34132 9.81041 4.57562 9.57608C4.80992 9.34176 5.18982 9.34174 5.42415 9.57605L8.49989 12.6515L15.0756 6.07606C15.31 5.84175 15.6899 5.84176 15.9242 6.07608Z"
            fill="black"
            fillOpacity="0.8"
          />
        </svg>
      );
    }

    return (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="20" height="20" rx="4" fill="white" />
        <rect
          x="0.5"
          y="0.5"
          width="19"
          height="19"
          rx="3.5"
          stroke="black"
          strokeOpacity="0.3"
        />
      </svg>
    );
  };

  return (
    <div>
      <div
        ref={selectorRef}
        onClick={() => setIsFocused(!isFocused)}
        className="relative cursor-pointer"
        style={{ width, height }}
      >
        <input
          type="text"
          readOnly
          value={selectedOptions.join(", ") || "Select options"}
          className="w-full px-[12px] py-[10px] border border-[#cccccc] hover:border-[#808080] transition-all focus:outline-none focus:ring-2 focus:ring-[#35cdfd] rounded-[8px] text-[#333333] text-[14px] font-normal"
        />
      </div>

      {isFocused && (
        <div
          ref={dropdownRef}
          className="absolute mt-1 w-[420px] bg-white border border-[#cccccc] rounded-[8px] max-h-[150px] overflow-auto z-10"
        >
          {options.map((option, index) => (
            <div
              key={index}
              className="flex items-center p-[10px] h-[48px] cursor-pointer w-full hover:bg-[#f2f2f2]"
            >
              <div
                onClick={() => handleCheckboxChange(option)}
                className="flex items-center justify-center"
              >
                {renderCheckbox(selectedOptions.includes(option))}
              </div>
              <label
                htmlFor={option}
                className="ml-[8px] text-[13px] font-medium text-[#3b3b3b]"
              >
                {option}
              </label>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}

export default MultiSelector;
</file>

<file path="src/components/Navbar.jsx">
import React from "react";
import Button from "./buttons/Button";
import IconButton from "./buttons/IconButton";

const LeftNavbar = () => {
  return (
    <div className="h-screen !w-[48px] !p-[20px_6px] bg-[#1f1f1f] text-white flex flex-col items-center justify-between">
      <div className="flex flex-col gap-[20px]">
        <img src="OTClogo.svg" className="w-[36px] h-[36px]" />
        <Button
          icon={"organizations.svg"}
          variant="icononly"
          className="!w-[36px] !h-[36px]"
        />
        <IconButton icon={"search.svg"} className="!w-[36px] !h-[36px]" />
      </div>
      <div className="flex flex-col gap-[20px] items-center">
        <div className="h-[1px] w-[19px] bg-[#626262]"></div>
        <IconButton icon={"settings.svg"} />
        <IconButton icon={"logout.svg"} />
      </div>
    </div>
  );
};

export default LeftNavbar;
</file>

<file path="src/components/Photos.jsx">
import React, { useState } from "react";
import Button from "./buttons/Button";

function Photos() {
  const [photos, setPhotos] = useState([]);

  return (
    <div className="flex flex-col justify-between w-[640px] h-[236px] mb-[32px] p-[24px] rounded-[16px] bg-white">
      <div className="flex flex-row justify-between w-full h-[28px] mb-[16px]">
        <span className="flex items-center text-[14px] text-[#333333] font-bold">
          Photos
        </span>
        <Button
          variant="flattened"
          icon="photo.svg"
          text="Add"
          width="73px"
          height="28px"
        />
      </div>
    </div>
  );
}

export default Photos;
</file>

<file path="src/components/Selector.jsx">
import React from "react";

function Selector({
  width = "312px",
  height = "40px",
  options = [],
  value,
  onChange,
}) {
  return (
    <div>
      <select
        className="relative !px-[12px] !py-[10px] border border-[#cccccc] hover:border-[#808080] transition-all focus:outline-[2px] focus:outline-[#35cdfd] focus:border-none rounded-[8px] text-[#333333] text-[14px] font-normal"
        style={{ width, height }}
        value={value}
        onChange={onChange}
      >
        <option value="">Select option</option>
        {options.map((option, index) => (
          <option key={index} value={option}>
            {option}
          </option>
        ))}
      </select>
    </div>
  );
}

export default Selector;
</file>

<file path="src/components/SideMenu.jsx">
import React from "react";
import Button from "./buttons/Button";

const SideMenu = () => {
  return (
    <menu className="flex flex-col w-[280px] h-screen bg-white p-[20px_20px_24px_20px]">
      {/* Header */}
      <header className="flex flex-col gap-[4px]">
        <span className="w-[210px] h-[24px] text-[14px]">
          <strong>Oak Tree Cemetery</strong>
        </span>
        <span className="w-[210px] h-[16px] text-[11px]">Process Manager</span>
        <div className="h-[1px] w-[250px] bg-[#e6e6e6] my-[20px]" />
      </header>

      {/* Buttons */}
      <div className="flex flex-col gap-[20px] items-center flex-grow">
        <Button
          text="Organizations"
          variant="filled"
          icon="organizations.svg"
          width="210px"
        />
        <Button
          text="Contractors"
          variant="outlined"
          icon="contractors.svg"
          width="210px"
        />
        <Button
          text="Clients"
          variant="outlined"
          icon="clients.svg"
          width="210px"
        />
      </div>

      {/* Footer */}
      <span className="mt-auto w-[210px] h-[16px] text-[11px] text-[#b3b3b3] flex justify-center items-end">
        All Funeral Services © 2015–2025
      </span>
    </menu>
  );
};

export default SideMenu;
</file>

<file path="src/main.jsx">
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import "./styles/index.css";
import App from "./components/App.jsx";

createRoot(document.getElementById("root")).render(
  <StrictMode>
    <App />
  </StrictMode>
);
</file>

<file path="src/pages/Home.jsx">
import React, { useEffect } from "react";
import Button from "../components/buttons/Button";
import IconButton from "../components/buttons/IconButton";
import Input from "../components/Input";
import Selector from "../components/Selector";
import CompanyDetails from "../components/CompanyDetails";
import LeftNavbar from "../components/Navbar";
import { useState } from "react";
import SideMenu from "../components/SideMenu";
import Contacts from "../components/Contacts";
import Photos from "../components/Photos";
import AuthComponent from "../components/AuthComponent";

function Home() {
  return (
    <>
      <div className="grid grid-cols-[48px_280px_1fr]">
        <LeftNavbar />
        <SideMenu />
        <div className="py-[40px_28px] flex flex-col items-center w-full h-screen bg-[#f7f7f7]">
          <div className="flex flex-row justify-between items-center w-[640px] mb-[32px]">
            <h1 className="text-28 text-[#313131] font-medium w-fit ">
              Organization
            </h1>
            <div className="flex flex-row items-center gap-[12px]">
              <IconButton icon="edit.svg" />
              <IconButton icon="delete.svg" />
            </div>
          </div>
          <CompanyDetails />
          <Contacts />
          <Photos />
          <AuthComponent />
        </div>
      </div>

      {/* <div className="flex flex-col">
          <Button text={"Label"} variant="filled" />
          <Button text={"Label"} icon={"vite.svg"} variant="outlined" />
          <Button text={"Label"} icon={"vite.svg"} variant="flattened" />
          <Button icon={"vite.svg"} variant="icononly" />

          <IconButton icon={"vite.svg"} onClick={handleButtonClick} />

          <Input />

          <Selector />
        </div> */}
      {/* <div>
        <input
          type="text"
          placeholder="Введите имя пользователя"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
        />
        <button onClick={handleAuth}>Авторизоваться</button>

        {token && <p>Токен: {token}</p>}
        {error && <p style={{ color: "red" }}>{error}</p>}
      </div> */}
    </>
  );
}

export default Home;
</file>

<file path="src/styles/index.css">
@import "tailwindcss";

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
     ========================================================================== */

/**
   * Remove the margin in all browsers.
   */

body {
  margin: 0;
  font-family: "Poppins", sans-serif;
}

/**
   * Render the `main` element consistently in IE.
   */

main {
  display: block;
}

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
     ========================================================================== */

/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */

pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
     ========================================================================== */

/**
   * Remove the gray background on active links in IE 10.
   */

a {
  background-color: transparent;
}

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */

b,
strong {
  font-weight: bolder;
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */

code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
   * Add the correct font size in all browsers.
   */

small {
  font-size: 80%;
}

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
     ========================================================================== */

/**
   * Remove the border on images inside links in IE 10.
   */

img {
  border-style: none;
}

/* Forms
     ========================================================================== */

/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
   * Remove the inner border and padding in Firefox.
   */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
   * Restore the focus styles unset by the previous rule.
   */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
   * Correct the padding in Firefox.
   */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
   * Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */

progress {
  vertical-align: baseline;
}

/**
   * Remove the default vertical scrollbar in IE 10+.
   */

textarea {
  overflow: auto;
}

/**
   * 1. Add the correct box sizing in IE 10.
   * 2. Remove the padding in IE 10.
   */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
     ========================================================================== */

/*
   * Add the correct display in Edge, IE 10+, and Firefox.
   */

details {
  display: block;
}

/*
   * Add the correct display in all browsers.
   */

summary {
  display: list-item;
}

/* Misc
     ========================================================================== */

/**
   * Add the correct display in IE 10+.
   */

template {
  display: none;
}

/**
   * Add the correct display in IE 10.
   */

[hidden] {
  display: none;
}
</file>

<file path="tailwind.config.js">
/** @type {import('tailwindcss').Config} */
export default {
  content: ["./index.html", "./src/**/*.{js,ts,jsx,tsx}"],
  theme: {
    extend: {},
  },
  plugins: [],
};
</file>

<file path="vite.config.js">
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import tailwindcss from "@tailwindcss/vite";

// https://vite.dev/config/
export default defineConfig({
  plugins: [react(), tailwindcss()],
});
</file>

</files>
